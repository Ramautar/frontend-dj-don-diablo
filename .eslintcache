[{"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\index.js":"1","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\reportWebVitals.js":"2","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\App.js":"3","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\home\\home.js":"4","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\home\\Home.js":"5","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\demoDrop\\DemoDrop.js":"6","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\SignUp\\SignUp.js":"7","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\SignIn\\SignIn.js":"8","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\signUp\\SignUp.js":"9","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\signIn\\SignIn.js":"10","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\navbar\\Navbar.js":"11","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\SignUpMessage\\SignUpError.js":"12","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\signUpMessage\\SignUpError.js":"13","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\button\\Button.js":"14","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\context\\AuthContext.js":"15","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Player\\MP3Player.js":"16","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\routing\\PrivateRoute.js":"17","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\myDemos\\MyDemos.js":"18","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Player\\audioSlider\\AudioSlider.js":"19","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Info\\MP3Info.js":"20","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\songListItem\\SongListItem.js":"21","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\songList\\SongList.js":"22","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\login\\Login.js":"23","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\administrator\\AdminController.js":"24","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\addCommentSelector\\AddCommentSelector.js":"25","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\userInfo\\UserInfo.js":"26","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\searchbox\\SearchBox.js":"27","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\userProfile\\UserProfile.js":"28","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\editUserForm\\EditUserForm.js":"29","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\searchboxUser\\SearchBoxUser.js":"30","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\myProfile\\MyProfile.js":"31"},{"size":724,"mtime":1611911410343,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1604,"mtime":1614142463906,"results":"35","hashOfConfig":"33"},{"size":144,"mtime":1609371501679,"results":"36","hashOfConfig":"33"},{"size":425,"mtime":1610383216197,"results":"37","hashOfConfig":"33"},{"size":8148,"mtime":1614104367870,"results":"38","hashOfConfig":"33"},{"size":206,"mtime":1609779397983,"results":"39","hashOfConfig":"33"},{"size":207,"mtime":1609779862814,"results":"40","hashOfConfig":"33"},{"size":8901,"mtime":1614144818323,"results":"41","hashOfConfig":"33"},{"size":3307,"mtime":1611913307441,"results":"42","hashOfConfig":"33"},{"size":3949,"mtime":1614123055230,"results":"43","hashOfConfig":"33"},{"size":385,"mtime":1610545296601,"results":"44","hashOfConfig":"33"},{"size":385,"mtime":1610545296601,"results":"45","hashOfConfig":"33"},{"size":352,"mtime":1611872632831,"results":"46","hashOfConfig":"33"},{"size":4115,"mtime":1613742676135,"results":"47","hashOfConfig":"33"},{"size":2967,"mtime":1614103257493,"results":"48","hashOfConfig":"33"},{"size":424,"mtime":1613317922313,"results":"49","hashOfConfig":"33"},{"size":2397,"mtime":1614091915049,"results":"50","hashOfConfig":"33"},{"size":829,"mtime":1612534064812,"results":"51","hashOfConfig":"33"},{"size":431,"mtime":1612563335215,"results":"52","hashOfConfig":"33"},{"size":3997,"mtime":1613940733613,"results":"53","hashOfConfig":"33"},{"size":2034,"mtime":1613980979727,"results":"54","hashOfConfig":"33"},{"size":4399,"mtime":1614145994297,"results":"55","hashOfConfig":"33"},{"size":3540,"mtime":1614099818655,"results":"56","hashOfConfig":"33"},{"size":2741,"mtime":1614102459753,"results":"57","hashOfConfig":"33"},{"size":2038,"mtime":1614158400189,"results":"58","hashOfConfig":"33"},{"size":2826,"mtime":1613982957452,"results":"59","hashOfConfig":"33"},{"size":2070,"mtime":1614540801907,"results":"60","hashOfConfig":"33"},{"size":10061,"mtime":1614543219721,"results":"61","hashOfConfig":"33"},{"size":3265,"mtime":1614032189012,"results":"62","hashOfConfig":"33"},{"size":1470,"mtime":1614540851612,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1fhtukz",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\index.js",[],["146","147"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\reportWebVitals.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\App.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\home\\home.js",[],["148","149"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\home\\Home.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\demoDrop\\DemoDrop.js",["150","151"],"import React, {useState} from \"react\";\r\nimport \"./DemoDrop.css\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport MP3Player from \"../../components/mp3Player/MP3Player\";\r\nimport uploadMP3Logo from '../../assets/upload_mp3_icon.svg';\r\nimport Button from \"../../components/button/Button\";\r\nimport { useAuthState } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction DropDemo(){\r\n    const { handleSubmit, register, errors} = useForm({mode:'onTouched'})\r\n\r\n    const [isUploadSucces, setIsUploadSucces] = useState(false);\r\n    const [loading, toggleLoading ] = useState(false);\r\n    const [filePath, setFilePath] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"No MP3 file selected\");\r\n    const [file, setFile] = useState(null);\r\n    const [fileSize, setFileSize] = useState(0)\r\n\r\n    const { user } = useAuthState();\r\n\r\n    let fileReader = new FileReader();\r\n\r\n\r\n    async function onFormSubmit(data, e){\r\n\r\n        const uploadDate = new Date().toLocaleDateString();\r\n        const demoUpload = {\r\n            username: user.username,\r\n            artistName: data.artistName,\r\n            songName: data.songName,\r\n            personalMessage: data.personalMessage,\r\n            songTitle: fileName,\r\n            uploadDate: uploadDate\r\n        }\r\n\r\n        const myDemo = JSON.stringify(demoUpload);\r\n        console.log(myDemo);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"model\", myDemo);\r\n\r\n        try{\r\n            toggleLoading(true);\r\n            const response = await axios.post(\"http://localhost:8080/upload\",formData,{\r\n                headers: {\r\n                      'Content-Type': 'multipart/form-data',\r\n                       Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            toggleLoading(false)\r\n            e.target.reset();\r\n            setIsUploadSucces(true)\r\n            setTimeout(()=>{\r\n                setIsUploadSucces(false);\r\n            },3000)\r\n            console.log(file)\r\n        }catch (e) {\r\n            toggleLoading(false)\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"drop-demo-container\">\r\n            <div className=\"drop-demo\">\r\n                <div className=\"drop-demo-form\">\r\n                    <h2>Drop Demo</h2>\r\n                    <form className=\"drop\" onSubmit={handleSubmit(onFormSubmit)}>\r\n                        <label htmlFor='artist-name' className=\"text-input\">\r\n                            <input\r\n                                className='drop-demo-input'\r\n                                id='artist-name'\r\n                                name='artistName'\r\n                                type=\"text\"\r\n                                placeholder=\"Artist Name\"\r\n                                ref={register({\r\n                                    required:{\r\n                                        value: true,\r\n                                        message:'\"Artist name\" mag niet leeg zijn'\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 20,\r\n                                        message:'\"Artist name\" mag niet meer dan 20 tekens bevatten'\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor='song-name' className=\"text-input\">\r\n                            <input\r\n                                className='drop-demo-input'\r\n                                id='song-name'\r\n                                name='songName'\r\n                                type=\"text\"\r\n                                placeholder=\"Song Name\"\r\n                                ref={register({\r\n                                    required:{\r\n                                        value: true,\r\n                                        message:'\"Song name\" mag niet leeg zijn'\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 20,\r\n                                        message:'\"Song name\" mag niet meer dan 20 tekens bevatten'\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </label>\r\n                        <div className=\"upload-mp3\">\r\n                            <label htmlFor='real-file'>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"MP3File\"\r\n                                    id=\"real-file\"\r\n                                    className=\"file-upload\"\r\n                                    accept=\"audio/mp3\"\r\n                                    onChange={(event)=>{\r\n                                        setFile(event.target.files[0])\r\n                                        let fileSizeMB = ((event.target.files[0]).size/1048576).toFixed(2)\r\n                                        setFileSize(fileSizeMB)\r\n                                        setFileName(event.target.files[0].name)\r\n                                        fileReader.onload = function(event){\r\n                                            setFilePath(`${event.target.result}`)\r\n                                        }\r\n                                        fileReader.readAsDataURL(event.target.files[0]);\r\n                                    }}\r\n                                    ref={register({\r\n                                        required:{\r\n                                            value: true,\r\n                                            message:\"Kies een muziek bestand voor upload\"\r\n                                        }\r\n                                    })}\r\n                                />\r\n                            </label>\r\n                            <img\r\n                                className=\"logo-image\"\r\n                                src={uploadMP3Logo}\r\n                                onClick={()=>document.getElementById(\"real-file\").click()}\r\n                                alt= \"mp3 upload icon\"\r\n                            />\r\n                            <span className=\"file-upload-txt\">{fileName}</span>\r\n                        </div>\r\n                        <label htmlFor='personal-message'>\r\n                            <textarea\r\n                                name=\"personalMessage\"\r\n                                id=\"personal-message\"\r\n                                rows=\"4\"\r\n                                cols=\"40\"\r\n                                placeholder=\"Personal message\"\r\n                                ref={register}\r\n                            >\r\n                            </textarea>\r\n                        </label>\r\n                        <div className=\"demo-drop-error\">\r\n                            {/*Filter door alle foutmeldingen van form en laat opvolgorde zien (1 voor 1)*/}\r\n                            {\r\n                                (errors.artistName && <span>{errors.artistName.message}</span>)||\r\n                                (errors.songName && <span>{errors.songName.message}</span>)||\r\n                                (errors.MP3File && <span>{errors.MP3File.message}</span>)\r\n                            }\r\n                            {isUploadSucces &&<span className='successful-upload'>Demo upload was succesvol!</span>}\r\n                        </div>\r\n                        <div className='drop-demo-btn'>\r\n                            <Button buttonSize={2} onClick={()=>onFormSubmit}>\r\n                                Upload Demo\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"music-player\">\r\n                <MP3Player uploadFile={filePath} uploadFileName={fileName} fileSize={fileSize}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DropDemo;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\SignUp\\SignUp.js",[],["152","153"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\SignIn\\SignIn.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\signUp\\SignUp.js",["154"],"import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"../../components/button/Button\";\r\nimport SignUpSuccessful from \"../../components/signUpMessage/SignUpError\";\r\nimport './SignUp.css'\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction SignUp(){\r\n    const { handleSubmit, register, errors, watch }= useForm({mode:'onTouched'});\r\n    const [ isRegistered, setIsRegistered ] = useState(false)\r\n    const [ error, setError ] = useState(false)\r\n    const [ errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const passwordReferrer = watch('password')\r\n\r\n    async function onFormSubmit(data, e){\r\n        const registrationFormData = {...data, role:[\"user\"]};\r\n        setErrorMessage(\"\");\r\n        try{\r\n            await axios.post('http://localhost:8080/api/auth/signup',registrationFormData);\r\n            setIsRegistered(true)\r\n            setTimeout(()=>{\r\n                e.target.reset();\r\n                setIsRegistered(false);\r\n            }, 4000)\r\n        }catch (e){\r\n            console.log(e.response.data.message)\r\n            console.log(e.response.data)\r\n            setErrorMessage(e.response.data.message)\r\n            setError(true)\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"sign-up\">\r\n            <div className=\"form-container\">\r\n            <form className={`SignUp-${isRegistered ? \"Error\" : \"form\"}`} onSubmit={handleSubmit(onFormSubmit)}>\r\n                <h1 className=\"sign-up-title\">Sign Up</h1>\r\n                    <label htmlFor=\"first-name\">\r\n                        <input\r\n                            placeholder=\"First name\"\r\n                            name=\"firstName\"\r\n                            id=\"first-name\"\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message:\"Dit regel mag niet leeg blijven\"\r\n                                },\r\n                                maxLength: {\r\n                                    value: 20,\r\n                                    message:\"Voornaam mag niet meer dan 20 tekens bevatten\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.firstName && <span className=\"error\">{errors.firstName.message}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"last-name\">\r\n                        <input\r\n                            placeholder=\"Last name\"\r\n                            name=\"lastName\"\r\n                            id=\"last-name\"\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message:\"Dit regel mag niet leeg blijven\"\r\n                                },\r\n                                maxLength:{\r\n                                    value:20,\r\n                                    message:\"Achternaam mag niet meer dan 20 tekens bevatten\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.lastName && <span className=\"error\">{errors.lastName.message}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"country\">\r\n                        <input\r\n                            placeholder=\"Country\"\r\n                            name=\"country\"\r\n                            id=\"country\"\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message:\"Dit regel mag niet leeg blijven\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.country && <span className=\"error\">{errors.country.message}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"facebook\">\r\n                        <input\r\n                            placeholder=\"Facebook\"\r\n                            name=\"facebook\"\r\n                            id=\"facebook\"\r\n                            ref={register}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"instagram\">\r\n                        <input\r\n                            placeholder=\"Instagram\"\r\n                            name=\"instagram\"\r\n                            id=\"instagram\"\r\n                            ref={register}\r\n                        />\r\n                    </label>\r\n\r\n                    <label htmlFor=\"email-address\">\r\n                        <input\r\n                            placeholder=\"Email address\"\r\n                            name=\"email\"\r\n                            id=\"email-address\"\r\n                            ref={register({\r\n                                required:{\r\n                                    value:true,\r\n                                    message: \"Dit regel mag niet leeg blijven\"\r\n                                },\r\n                                maxLength:{\r\n                                    value: 25,\r\n                                    message: \"Voornaam mag niet meer dan 20 tekens bevatten\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n                    </label>\r\n\r\n                <label htmlFor=\"username\">\r\n                    <input\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        ref={register({\r\n                            required:{\r\n                                value:true,\r\n                                message: \"Dit regel mag niet leeg blijven\"\r\n                            },\r\n                            maxLength:{\r\n                                value: 25,\r\n                                message: \"Username mag niet meer dan 20 tekens bevatten\"\r\n                            }\r\n                        })}\r\n                    />\r\n                    {errors.username && <span className=\"error\">{errors.username.message}</span>}\r\n                </label>\r\n\r\n\r\n                <label htmlFor=\"password\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Dit regel mag niet leeg blijven\"\r\n                                },\r\n                                maxLength: {\r\n                                    value: 15,\r\n                                    message: \"Wachtwoord mag niet meer dan 20 tekens bevatten\"\r\n                                },\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"Wachtwoord moet minimaal 8 tekens lang zijn\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.password && <span className=\"error\">{errors.password.message}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"confirm-password\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"confirmPassword\"\r\n                            id=\"confirmPassword\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Dit regel mag niet leeg blijven\"\r\n                                },\r\n                                validate: (value)=> value === passwordReferrer || \"Wachtwoord komt niet overeen\"\r\n                            })}\r\n                        />\r\n                        {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword.message}</span>}\r\n                    </label>\r\n                <div className='sign-up-fetch-error'>\r\n                    {errorMessage && <p>{errorMessage}</p>}\r\n                </div>\r\n                <div className=\"sign-up-btn\">\r\n                    <Button buttonSize={1} onClick={()=>onFormSubmit}>\r\n                        Sign Up\r\n                    </Button>\r\n                </div>\r\n                </form>\r\n                {isRegistered && <SignUpSuccessful />}\r\n                <div className=\"form-image\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\signIn\\SignIn.js",["155","156","157"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './SignIn.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/button/Button';\r\nimport axios from \"axios\";\r\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\r\n\r\nfunction SignIn({closeSigninForm}){\r\n\r\n    const { login } = useContext(AuthContext);\r\n    const { isAuthenticated } = useAuthState();\r\n\r\n    const [showSignInForm, setShowSignInForm] = useState('show');\r\n    const {handleSubmit, register } = useForm({mode:'unTouched'});\r\n\r\n    const [loading, toggleLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // react-router dingen\r\n    const history = useHistory();\r\n\r\n    // Deze functie wordt elke keer afgevuurd als isAuthenticated (uit context) veranderd\r\n    useEffect(() => {\r\n        // als hij de waarde true heeft, DAN sturen we de gebruiker door!\r\n        if (isAuthenticated === true) {\r\n            setShowSignInForm('close');\r\n            closeSigninForm(false);\r\n            history.push('/demo-drop');\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    async function onFormSubmit(data){\r\n        toggleLoading(true);\r\n        setError('');\r\n         try{\r\n            const response= await axios.post('http://localhost:8080/api/auth/signin',data);\r\n            console.log(response.data)\r\n             login(response.data)\r\n        }catch(e){\r\n            console.error(e)\r\n             setError('Inloggen is mislukt');\r\n        }\r\n        toggleLoading(false);\r\n    }\r\n\r\n    function handleCloseModel(){\r\n        setShowSignInForm('close')\r\n        closeSigninForm(false)\r\n    }\r\n\r\n    return(\r\n        <div className={ `${showSignInForm}-form`}>\r\n            <div className='modal-content'>\r\n                <div className='close-modal' onClick={handleCloseModel}>+</div>\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={handleSubmit(onFormSubmit)}>\r\n                    <div className='form-sign-in-container'>\r\n                        <label htmlFor='sign-in-user-name'>\r\n                            <input\r\n                                name='username'\r\n                                type='text'\r\n                                placeholder='User Name'\r\n                                id='sign-in-user-name'\r\n                                maxLength='20'\r\n                                ref={register}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor='sign-in-password'>\r\n                            <input\r\n                                name='password'\r\n                                type='password'\r\n                                placeholder='Password'\r\n                                id='sign-in-password'\r\n                                ref={register}\r\n                            />\r\n                        </label>\r\n                        <div className='sign-in-btn'>\r\n                            <Button buttonSize={1} onClick={()=>onFormSubmit}>\r\n                                Sign in\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\navbar\\Navbar.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\SignUpMessage\\SignUpError.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\signUpMessage\\SignUpError.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\button\\Button.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\context\\AuthContext.js",["158"],"import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nfunction AuthContextProvider({ children }) {\r\n    const [authState, setAuthState] = useState({\r\n        status: 'pending',\r\n        error: null,\r\n        user: null,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        async function getUserInfo() {\r\n            try {\r\n                // We kunnen de gebruikersdata ophalen omdat we onszelf authenticeren met de token\r\n                const response = await axios.get('http://localhost:8080/api/user', {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                        },\r\n                    }\r\n                );\r\n\r\n                console.log(response);\r\n\r\n                // met het resultaat vullen we de context\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: {\r\n                        id: response.id,\r\n                        username: response.username,\r\n                        email: response.email,\r\n                    },\r\n                    status: 'done',\r\n                });\r\n\r\n            } catch (e) {\r\n                // Gaat er toch iets mis? Dan zetten we de error in de context\r\n                console.log(\"kan gegevens niet ophalen\");\r\n                setAuthState({\r\n                    ...authState,\r\n                    user: null,\r\n                    error: e,\r\n                    status: 'done'\r\n                });\r\n            }\r\n        }\r\n\r\n        // als we GEEN user informatie meer in de applicatie hebben, maar er staat WEL een token in\r\n        // local storage, gaan we handmatig de gebruikersdata ophalen door de getUserInfo functie van hierboven aan te roepen\r\n        if (authState.user === null && token) {\r\n            getUserInfo();\r\n        } else {\r\n            // Als er geen ingelogde gebruiker hoeft te zijn, zetten we de context naar de basis state\r\n            setAuthState({\r\n                ...authState,\r\n                error: null,\r\n                user: null,\r\n                status: 'done'\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function login(data){\r\n        localStorage.setItem('token',data.accessToken);\r\n\r\n        setAuthState({\r\n            ...authState,\r\n            user:{\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                country: data.country,\r\n                facebook: data.facebook,\r\n                instagram: data.instagram,\r\n                email: data.email,\r\n                roles: data.roles,\r\n                username: data.username\r\n            }\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        // 1. Maak local storage leeg\r\n        localStorage.clear();\r\n        // 2. Haal de user uit de context-state\r\n        setAuthState({\r\n            ...authState,\r\n            user: null,\r\n        })\r\n    }\r\n\r\n    // als je hem helemaal uit zou schrijven en als variabele mee zou geven aan AuthContext.Provider:\r\n    // const providerData = {\r\n    //   ...authState,\r\n    //   login: login,\r\n    //   logout: logout,\r\n    // };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ ...authState, login, logout }}>\r\n            {authState.status === 'done' && children}\r\n            {authState.status === 'pending' && <p>Loading...</p>}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nfunction useAuthState() {\r\n    const authState = useContext(AuthContext);\r\n\r\n    // iemand is geauthoriseerd wanneer de status === 'done'\r\n    // en als er een gebruiker in de authState staat\r\n    const isDone = authState.status === 'done';\r\n    const isAuthenticated = authState.user !== null && isDone;\r\n\r\n    // console.log('Ik ben authenticated:', isAuthenticated);\r\n\r\n    return {\r\n        ...authState,\r\n        isAuthenticated: isAuthenticated,\r\n    }\r\n}\r\n\r\nexport {\r\n    AuthContext,\r\n    useAuthState,\r\n    AuthContextProvider,\r\n}\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Player\\MP3Player.js",["159"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport './MP3Player.css';\r\nimport discImage from \"../../assets/disc.png\"\r\n\r\nfunction MP3Player({uploadFile, uploadFileName, fileSize}){\r\n\r\n    const audioRef = useRef(0)\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [durationAudio, setDurationAudio] = useState(\"00:00\");\r\n    const [progressTime, setProgressTime] = useState(0)\r\n    const [currentAudioTime, setCurrentAudioTime] = useState(\"00:00\");\r\n\r\n    useEffect(()=>{\r\n        setIsPlaying(false);\r\n    },[uploadFileName])\r\n\r\n\r\n    function timeCalculation(time){\r\n        const minutes = Math.floor(time/60);\r\n        const seconds = Math.floor(time%60);\r\n\r\n        return(`${minutes < 10 ? \"0\" : \"\"}${minutes}:${seconds < 10 ? \"0\": \"\"}${seconds}`)\r\n    }\r\n\r\n    const songTimer =(event)=>{\r\n        setProgressTime((audioRef.current.currentTime/audioRef.current.duration)*100)\r\n        setCurrentAudioTime(timeCalculation(audioRef.current.currentTime))\r\n        if(audioRef.current.ended){\r\n            audioRef.current.currentTime = 0;\r\n            setIsPlaying(false);\r\n        }\r\n    }\r\n\r\n    const playSound = ()=> {\r\n        audioRef.current.volume = 0.1;\r\n        if(!isPlaying){\r\n            audioRef.current.play();\r\n            setIsPlaying(true);\r\n            setDurationAudio(timeCalculation(audioRef.current.duration))\r\n        }else {\r\n            audioRef.current.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    }\r\n\r\n    const fastBackward = ()=>{\r\n        audioRef.current.currentTime -= 5;\r\n    }\r\n    const fastForward = ()=> {\r\n        audioRef.current.currentTime += 5;\r\n    }\r\n\r\n    return(\r\n        <div className=\"mp3-player-container\">\r\n            <div className=\"file-name\">\r\n                <h4>{uploadFileName}</h4>\r\n                <p className='file-size'>{`( ${fileSize} MB)`} </p>\r\n            </div>\r\n            <div className=\"image-container\">\r\n                <img src={discImage} alt=\"cd image\" className={`cd-image ${isPlaying && \"anime\"}`}/>\r\n            </div>\r\n            <audio  ref={audioRef} src={uploadFile} onTimeUpdate={songTimer} />\r\n            <div className=\"progressbar-container\">\r\n                <div className=\"progress-duration-meter\">\r\n                    <div className=\"current-time\">{currentAudioTime}</div>\r\n                    <div className=\"duration\">{durationAudio}</div>\r\n                </div>\r\n                <div className=\"progress-div\">\r\n                    <div className=\"progress\" style={{width:`${progressTime}%`}} />\r\n                </div>\r\n            </div>\r\n            <div className=\"audio-control\">\r\n                <i className=\"fa fa-backward\" onClick={fastBackward} />\r\n                <i className={`main-button fa ${isPlaying ? \"fa-pause\" : \"fa-play\"}`} onClick={playSound} />\r\n                <i className=\"fa fa-forward\" onClick={fastForward} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MP3Player;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\routing\\PrivateRoute.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\myDemos\\MyDemos.js",["160","161","162"],"import React, {useState, useEffect} from 'react';\r\nimport './MyDemos.css';\r\nimport axios from \"axios\";\r\nimport { useAuthState} from \"../../context/AuthContext\";\r\nimport SongList from \"../../components/songList/SongList\";\r\n\r\nfunction MyDemos(){\r\n\r\n    const { user } = useAuthState();\r\n\r\n    const [demos, setDemos] = useState([]);\r\n    const [currentDemo, setCurrentDemo] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [loading, toggleLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"MyDemos component\")\r\n        async function getDemoList(){\r\n            try{\r\n                const response = await axios.get(`http://localhost:8080/api/demos/${user.username}`,{\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                })\r\n                setDemos(response.data.demo);\r\n            }catch (e) {\r\n                console.log(\"Er is iets misgegaan met communicatie backend\")\r\n            }\r\n        }\r\n        getDemoList();\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div className='my-demo-main-container'>\r\n            <div className='my-demo-container'>\r\n                <div className='my-demo-info'>\r\n                    <h3 className=\"my-demo-title\">My Demo Info</h3>\r\n                    <div className='info'>\r\n                        {(currentDemo || currentDemo === 0) &&\r\n                        <div>\r\n                            <p>File name: {demos[currentDemo].songTitle}</p>\r\n                            <p>Song name: {demos[currentDemo].songName}</p>\r\n                            <p>Upload date: {demos[currentDemo].uploadDate}</p>\r\n                            <p className='my-demo-comment'>Comment : {demos[currentDemo].comment}</p>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-list-container\">\r\n                    {demos &&\r\n                        <SongList\r\n                            demos={demos}\r\n                            selectedDemo={setCurrentDemo}\r\n                            pageNumber={pageNumber}\r\n                            setPageNumber={setPageNumber}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyDemos;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Player\\audioSlider\\AudioSlider.js",["163","164","165"],"import React, {useState} from 'react';\r\nimport './AudioSlider.css'\r\n\r\nfunction AudioSlider(){\r\n    const [currentAudioTime, setCurrentAudioTime] = useState(0);\r\n    const [durationAudio, setDurationAudio] = useState(0);\r\n    const [progressTime, setProgressTime] = useState(0);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"progressbar-container\">\r\n                <div className=\"progress-duration-meter\">\r\n                    <div className=\"current-time\">{currentAudioTime}</div>\r\n                    <div className=\"duration\">{durationAudio}</div>\r\n                </div>\r\n                <div className=\"progress-div\">\r\n                    <div className=\"progress\" style={{width:`${progressTime}%`}} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AudioSlider\r\n",["166","167"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\mp3Info\\MP3Info.js",[],["168","169"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\songListItem\\SongListItem.js",["170","171"],"import React, {useState, useEffect} from 'react';\r\nimport './SongListItem.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction SongListItem({item, setSelectSong, selectSong, demoURL, index}){\r\n\r\n    const [playingSong, setPlayingSong] = useState(false);\r\n    const [audioURL, setAudioURL] = useState(\"\");\r\n    const [loading, toggleLoading] = useState(false);\r\n\r\n    const [audio] = useState(new Audio())\r\n\r\n    function stopPlaying(){\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n        setPlayingSong(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(playingSong){\r\n            stopPlaying();\r\n        }\r\n    },[selectSong, index, demoURL])\r\n\r\n\r\n    useEffect(()=>{\r\n        audio.setAttribute('src',audioURL);\r\n        if(!playingSong && audioURL !== \"\"){\r\n            audio.play();\r\n            setPlayingSong(true);\r\n        }else {\r\n            stopPlaying();\r\n        }\r\n        return (stopPlaying)\r\n    },[audioURL])\r\n\r\n\r\n    async function playSong(){\r\n          try{\r\n              if(!playingSong) {\r\n                  toggleLoading(true);\r\n                  const response = await axios.get(demoURL, {\r\n                      headers: {\r\n                          'Content-Type': 'audio/mpeg',\r\n                          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                      },\r\n                      responseType: 'blob'\r\n                  })\r\n                  setAudioURL(window.URL.createObjectURL(new Blob([response.data])));\r\n\r\n                  //*******        Voor downloaden van MP3 bestand       *******//\r\n                  // const link = document.createElement('a');\r\n                  // link.href = url;\r\n                  // link.setAttribute('download', `${item.songTitle}`);\r\n                  // document.body.appendChild(link);\r\n                  // link.click();\r\n                  //********************************************************//\r\n\r\n              }else if(playingSong){\r\n                  stopPlaying();\r\n                }else {\r\n                  audio.setAttribute('src',audioURL);\r\n                  await audio.play();\r\n                  setPlayingSong(true);\r\n                }\r\n\r\n          }catch (e){\r\n              console.log(\"Problems with playing song\")\r\n          }\r\n        toggleLoading(false);\r\n    }\r\n\r\n    return(\r\n        <div className='song-list-item-container'>\r\n            <button\r\n                className='song-list-input'\r\n                id={`radio${index}`}\r\n                // name='song'\r\n                value={index}\r\n                type='checkbox'\r\n                // onChange={(event)=>setSelectSong(event.target.value)}\r\n                onClick={(event)=>setSelectSong(event.target.value)}\r\n                // defaultChecked={false}\r\n            />\r\n            <label htmlFor={`radio${index}`} >\r\n                <div className={`song-item ${selectSong === `${index}` ? \"selected\" : \"\"}`} >\r\n                    <p className=\"song-position\">{index}</p>\r\n                    <div className='song-container'>\r\n                        <p className=\"song-title\">{item.songTitle}</p>\r\n                        <p className='song-info'>\r\n                            <span>{item.username}</span> |\r\n                            <span>{item.artistName}</span> |\r\n                            <span>{item.songName}</span> |\r\n                            <span>{item.uploadDate}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className={`my-demo-status ${item.status}`}>\r\n                        <p>{item.status}</p>\r\n                    </div>\r\n                    <div className=\"my-demo-play-button\" onClick={playSong}>\r\n                        <span>play demo </span><i className={`fa ${playingSong ? 'fa-pause' :'fa-play'} my-demo-play`}/>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n            {loading && <span className='loading'>Loading...</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongListItem;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\songList\\SongList.js",["172"],"import React, {useState,useEffect} from 'react';\r\nimport './SongList.css';\r\nimport SongListItem from \"../songListItem/SongListItem\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nfunction SongList({demos, selectedDemo, pageNumber, setPageNumber}){\r\n    const [selectSong, setSelectSong] = useState();\r\n    // const [pageNumber, setPageNumber] = useState(0);\r\n\r\n    const demosPerPage = 5;\r\n    const pagesVisited = pageNumber * demosPerPage;\r\n    const pageCount = Math.ceil(demos.length/demosPerPage);\r\n\r\n    const changePage = ({selected})=>{\r\n        setPageNumber(selected);\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        selectedDemo(selectSong - 1);\r\n    },[selectSong])\r\n\r\n\r\n    const songList = demos\r\n        .slice(pagesVisited, pagesVisited + demosPerPage)\r\n        .map((item, i)=> {\r\n            return (\r\n                <li key={i} className='song-list-component'>\r\n                    <SongListItem\r\n                        item={item}\r\n                        setSelectSong={setSelectSong}\r\n                        selectSong={selectSong}\r\n                        demoURL={demos[(pageNumber)*demosPerPage+ i].demoURL}\r\n                        index = {(pageNumber)*demosPerPage+ i + 1}\r\n                    />\r\n                </li>\r\n            )\r\n        })\r\n\r\n    return(\r\n        <div className='song-list'>\r\n            <ReactPaginate\r\n                previousLabel={\"Previous\"}\r\n                nextLabel={\"Next\"}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationButtons\"}\r\n                previousLinkClassName={\"previousButton\"}\r\n                nextLinkClassName={\"nextButton\"}\r\n                disabledClassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n                setResetPaginationToggle\r\n            />\r\n            {songList}\r\n            {demos.length === 0 && <h1 className='my-demo-empty'> {'< '}Your List is Empty{' >'}</h1>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\login\\Login.js",["173"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport './Login.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { AuthContext, useAuthState } from \"../../context/AuthContext\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Login() {\r\n    const {handleSubmit, register, errors} = useForm()\r\n    const [loginSuccesMessage, setLoginSuccesMessage] = useState(null);\r\n    const [loginFailMessage, setLoginFailMessage] = useState(\"\");\r\n\r\n    const { login } = useContext(AuthContext);\r\n    const { isAuthenticated } = useAuthState();\r\n\r\n    // react-router dingen\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        // als hij de waarde true heeft, DAN sturen we de gebruiker door!\r\n        if (isAuthenticated === true) {\r\n            history.push('/my-demos');\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    async function onFormSubmit(data, e) {\r\n        setLoginFailMessage(\"\");\r\n        try {\r\n            const response= await axios.post('http://localhost:8080/api/auth/signin',data,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            setLoginSuccesMessage(\"Succesvol ingelogd!!!!\")\r\n            setTimeout(()=>{\r\n                e.target.reset();\r\n                // We roepen hier de context-functie \"login\" aan. De context gaat dan met de data die we hebben\r\n                // teruggekregen alles op de juiste manier in localstorage en state zetten!\r\n                login(response.data);\r\n            }, 2000)\r\n\r\n        }catch (e) {\r\n            console.log(e.response.data.message);\r\n            setLoginFailMessage(\"Login onsuccesvol controleer Username en Password\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-page'>\r\n            <div className='login-container'>\r\n                <div className='login-title'>\r\n                    <h1>Sign in</h1>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onFormSubmit)}>\r\n                    <label htmlFor='login-username' className='login-input'>\r\n                        <input\r\n                            placeholder='Username'\r\n                            type='text'\r\n                            id='login-username'\r\n                            className='login-input-field'\r\n                            name='username'\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Veld Username mag niet leeg zijn'\r\n                                }\r\n                            })}\r\n                        >\r\n                        </input>\r\n                    </label>\r\n                    <label htmlFor='login-password' className='login-input'>\r\n                        <input\r\n                            placeholder='Password'\r\n                            id='login-password'\r\n                            type='password'\r\n                            className='login-input-field'\r\n                            name='password'\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Veld Password mag niet leeg zijn'\r\n                                }\r\n                            })}\r\n                        >\r\n                        </input>\r\n                    </label>\r\n                    <button className='login-button' onClick={()=>onFormSubmit}>SIGN IN</button>\r\n                </form>\r\n                <div className='login-error-message'>\r\n                    {(errors.username || errors.password) && <span>Veld Username mag niet leeg zijn</span>}\r\n                    {loginSuccesMessage && <span className='login-succes'>{loginSuccesMessage}</span>}\r\n                    {loginFailMessage && <span className='login-fail'>{loginFailMessage}</span>}\r\n                </div>\r\n                <div className='login-message-container'>\r\n                    <p>Heb je nog geen account? <Link to='/sign-up'>Registreer</Link> je dan eerst.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\administrator\\AdminController.js",["174"],"import React, {useEffect, useState} from 'react'\r\nimport './AdminController.css'\r\nimport SongList from \"../../components/songList/SongList\";\r\nimport MP3Player from \"../../components/mp3Player/MP3Player\";\r\nimport AddCommentSelector from \"../../components/addCommentSelector/AddCommentSelector\";\r\nimport UserInfo from \"../../components/userInfo/UserInfo\";\r\nimport SearchBox from \"../../components/searchbox/SearchBox\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminController() {\r\n    const [demos, setDemos] = useState([]);\r\n    const [currentDemo, setCurrentDemo] = useState(null);\r\n    const [searchDemos, setSearchDemos] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        async function getDemoList() {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/demos/all-demos`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                })\r\n                setDemos(response.data.demo);\r\n            } catch (e) {\r\n                console.log(\"Er is iets misgegaan met communicatie backend\")\r\n            }\r\n        }\r\n\r\n        getDemoList();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <div className='admin-profile'>\r\n                <div className='admin-user-infobox'>\r\n                    <h3 className='admin-user-info-title'> Producer info</h3>\r\n                    {(currentDemo || currentDemo === 0) &&\r\n                    <UserInfo username={searchDemos[currentDemo].username} currentDemo={currentDemo}/>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='admin-demo-list'>\r\n                {(demos.length !== 0) &&\r\n                    <SearchBox\r\n                        allDemos={demos}\r\n                        searchDemo={setSearchDemos}\r\n                        currentDemo={setCurrentDemo}\r\n                        setPageNumber={setPageNumber}\r\n                    />}\r\n                {(searchDemos.length !==0) &&\r\n                    <SongList\r\n                        demos={searchDemos}\r\n                        selectedDemo={setCurrentDemo}\r\n                        pageNumber={pageNumber}\r\n                        setPageNumber={setPageNumber}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n            <div className='admin-demo-info'>\r\n                <div className='admin-demo-infobox'>\r\n                    <h3 className='admin-demo-info-title'>Demo Info</h3>\r\n                    {(currentDemo || currentDemo === 0) &&\r\n                        <div>\r\n                            <p>File name: {searchDemos[currentDemo].songTitle}</p>\r\n                            <p>Song name: {searchDemos[currentDemo].songName}</p>\r\n                            <p>Artist name: {searchDemos[currentDemo].artistName}</p>\r\n                            <p>Upload date: {searchDemos[currentDemo].uploadDate}</p>\r\n                            <p>Status: {searchDemos[currentDemo].status}</p>\r\n                            <p className='admin-comment'>Comment: {searchDemos[currentDemo].comment}</p>\r\n                            <div className='admin-add-comment'>\r\n                                <AddCommentSelector demoId={searchDemos[currentDemo].id}/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminController;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\addCommentSelector\\AddCommentSelector.js",["175","176"],"import React, {useState} from 'react';\r\nimport { ReactComponent as Spinner } from '../../assets/refresh.svg';\r\nimport './AddCommentSelector.css'\r\nimport axios from \"axios\";\r\n\r\nconst comments = [\r\n    \"Copyright violation\",\r\n    \"Song marked as favourite\",\r\n    \"Song marked as accepted\",\r\n    \"Song marked as rejected\"\r\n]\r\n\r\nfunction AddCommentSelector({demoId}) {\r\n    const [selectedComment, setSelectedComment] = useState('');\r\n    const [comment, setComment] = useState(null)\r\n    const [loading, toggleLoading] = useState(false)\r\n    const [succesMessage, setSuccesMessage] = useState(false);\r\n    const [failedMessage, setFailedMessage] = useState(false);\r\n\r\n    async function uploadComment() {\r\n        setComment(comments[selectedComment])\r\n        if (selectedComment) {\r\n            setFailedMessage(false);\r\n            toggleLoading(true);\r\n            try {\r\n                const response = await axios.patch(`http://localhost:8080/api/demos/${demoId}`, comments[selectedComment], {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                })\r\n                setSuccesMessage(true)\r\n                setTimeout(() => {\r\n                    setSuccesMessage(false)\r\n                }, 2000)\r\n            } catch (e) {\r\n                setFailedMessage(true);\r\n            }\r\n            toggleLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='add-comment-selector'>\r\n            <p className='comment-upload-msg'>\r\n                {succesMessage && <p className=\"successful-upload\"> Commentaar succesvol toegevoegd</p>}\r\n                {failedMessage && <p className=\"failed-upload\">Fout tijdens verzenden</p>}\r\n            </p>\r\n            <select\r\n                className='comment-selection-box'\r\n                name='selectedComments'\r\n                value={selectedComment}\r\n                onChange={(event) => setSelectedComment(event.target.value)}\r\n            >\r\n                <option defaultValue=''/>\r\n                <option value={0}>{comments[0]}</option>\r\n                <option value={1}>{comments[1]}</option>\r\n                <option value={2}>{comments[2]}</option>\r\n                <option value={3}>{comments[3]}</option>\r\n                <option/>\r\n            </select>\r\n            <button\r\n                className='add-comment-button'\r\n                type='button'\r\n                onClick={uploadComment}\r\n                disabled={loading}\r\n            >{loading ? <Spinner className=\"loading-icon\" /> : 'Add Comment'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default AddCommentSelector;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\userInfo\\UserInfo.js",["177"],"import React, { useEffect, useState } from 'react';\r\nimport './UserInfo.css';\r\nimport axios from \"axios\";\r\n\r\nfunction UserInfo({username, currentDemo, setCurrentUserInfo}) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchUserInfo() {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/user/${username}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                })\r\n                setCurrentUser(response.data);\r\n                setCurrentUserInfo(response.data)\r\n            } catch (e) {\r\n                console.log(\"Kan user gegevens niet ophalen\")\r\n            }\r\n        }\r\n\r\n        fetchUserInfo();\r\n    }, [currentDemo])\r\n\r\n    return (\r\n        <div>\r\n            {currentUser &&\r\n            <div className='user-info-container'>\r\n                <p className='user-info-username'>User name: {currentUser.username}</p>\r\n                <p className='user-info-firstname'>First name: {currentUser.firstName}</p>\r\n                <p className='user-info-lastname'>Last name: {currentUser.lastName}</p>\r\n                <p className='user-info-username'>Country: {currentUser.country}</p>\r\n                <p className='user-info-username'>Facebook: {currentUser.facebook ? currentUser.facebook : \"-\"}</p>\r\n                <p className='user-info-username'>Instagram: {currentUser.instagram ? currentUser.instagram : \"-\"}</p>\r\n                <p className='user-info-authorization'>Authorization : </p>\r\n                <p className='user-authorization'>\r\n                    {currentUser.roles.map((role,index)=> {return (<ul key={index}> <li>{role.name}</li> </ul>)})}\r\n                </p>\r\n                <p className='user-info-email'>Email: {currentUser.email}</p>\r\n             </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\searchbox\\SearchBox.js",["178","179"],"import React, {useEffect,useState} from 'react';\r\nimport './SearchBox.css';\r\n\r\n\r\nfunction SearchBox({allDemos, searchDemo, currentDemo, setPageNumber}) {\r\n\r\n    const [queryByUsername, setQueryByUsername] = useState(\"\");\r\n    const [queryBySelection, setQueryBySelection] = useState(\"\")\r\n    const [filteredBySelection, setFilteredBySelection] = useState(allDemos);\r\n    const [searchColumns] = useState([\"username\",\"status\"]);\r\n\r\n    useEffect(()=>{\r\n        const listOfSelectedDemos =[];\r\n        setQueryByUsername(\"\")\r\n        searchSelection(allDemos).map((demo)=>listOfSelectedDemos.push(demo));\r\n        setFilteredBySelection(listOfSelectedDemos);\r\n        displayList(listOfSelectedDemos);\r\n    },[queryBySelection])\r\n\r\n    useEffect(()=> {\r\n        const listOfSelectedDemos =[];\r\n        searchUsername(filteredBySelection).map((demo)=>listOfSelectedDemos.push(demo));\r\n        displayList(listOfSelectedDemos);\r\n    },[queryByUsername])\r\n\r\n    function searchSelection(rows){\r\n        return rows.filter(row =>\r\n            searchColumns.some((column)=>row[column]\r\n                .toString()\r\n                .toLowerCase()\r\n                .indexOf(queryBySelection.toLowerCase())>-1)\r\n        )}\r\n\r\n    function searchUsername(rows){\r\n        return rows.filter(row =>\r\n            searchColumns.some((column)=>row[column]\r\n                .toString()\r\n                .toLowerCase()\r\n                .indexOf(queryByUsername.toLowerCase())>-1)\r\n        )}\r\n\r\n    function displayList(listOfSelectedDemos){\r\n        searchDemo(listOfSelectedDemos);\r\n        currentDemo(null);\r\n        setPageNumber(0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar-container\">\r\n            <input\r\n                className='searchbar-input'\r\n                type='text'\r\n                placeholder='Search by username.....'\r\n                value={queryByUsername}\r\n                onChange={(e) => setQueryByUsername(e.target.value)}\r\n            />\r\n            <div className='searchbar-radio-button'>\r\n                <input type=\"radio\"\r\n                       value=\"pending\"\r\n                       name=\"status\"\r\n                       onChange={event => setQueryBySelection(event.target.value)}\r\n                /> Pending\r\n                <input type=\"radio\"\r\n                       value=\"reviewed\"\r\n                       name=\"status\"\r\n                       onChange={event => setQueryBySelection(event.target.value)}\r\n                /> Reviewed\r\n                <input type=\"radio\"\r\n                       value=\"\"\r\n                       name=\"status\"\r\n                       onChange={event => setQueryBySelection(event.target.value)}\r\n                       checked={queryBySelection===\"\"}\r\n                /> All\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\userProfile\\UserProfile.js",["180"],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\editUserForm\\EditUserForm.js",[],"C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\components\\searchboxUser\\SearchBoxUser.js",["181"],"import React, {useState, useEffect} from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './SearchBoxUser.css';\r\n\r\n\r\nfunction SearchBoxUser({users, setSelectedUser}){\r\n\r\n    const [queryByUsername, setQueryByUsername] = useState(\"\");\r\n    const [searchColumns] = useState([\"username\"]);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [filteredUsername, setFilteredUsername] = useState([]);\r\n\r\n    const usersPerPage = 10;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    const pageCount = Math.ceil(users.length/usersPerPage);\r\n\r\n    const changePage = ({selected})=>{\r\n        setPageNumber(selected);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const listOfSelectedUser =[];\r\n        searchUsername(users).map((user)=>listOfSelectedUser.push(user));\r\n        showUsernameList(listOfSelectedUser)\r\n    },[queryByUsername])\r\n\r\n    function searchUsername(rows){\r\n        return rows.filter((row) => searchColumns.some((column)=>row[column]\r\n                .toString()\r\n                .toLowerCase()\r\n                .indexOf(queryByUsername.toLowerCase())>-1)\r\n        )}\r\n\r\n    function showUsernameList(listOfSelectedUser){\r\n        const showList = listOfSelectedUser\r\n            .slice(pagesVisited, pagesVisited + usersPerPage)\r\n            .map((user, index) => {\r\n            return(\r\n                <div key={index}>\r\n                    <input\r\n                        className='user-radio-button'\r\n                        id={user.id}\r\n                        type='radio'\r\n                        name='searchUser'\r\n                        value={user.username}\r\n                        onChange={(event)=>setSelectedUser(event.target.value)}\r\n                    />\r\n                    <label htmlFor={user.id}>\r\n                        {user.username}\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n        setFilteredUsername(showList)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='user-search'>\r\n            <div className='user-search-bar'>\r\n                <h3 className='select-user-title'>Select User</h3>\r\n                <input\r\n                    className='user-search-input'\r\n                    type='text'\r\n                    placeholder='Search by username.....'\r\n                    value={queryByUsername}\r\n                    onChange={(e) => setQueryByUsername(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='list-of-allUsers'>\r\n                {filteredUsername.length > 0 && filteredUsername}\r\n            </div>\r\n            <div className='user-paginate'>\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePage}\r\n                    containerClassName={\"paginationButtons\"}\r\n                    previousLinkClassName={\"previousButton\"}\r\n                    nextLinkClassName={\"nextButton\"}\r\n                    disabledClassName={\"paginationDisabled\"}\r\n                    activeClassName={\"paginationActive\"}\r\n                    setResetPaginationToggle\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBoxUser;\r\n","C:\\Project\\WebstormProjects\\frontend-dj-don-diablo\\src\\pages\\myProfile\\MyProfile.js",["182","183","184","185","186","187","188","189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"190","replacedBy":"194"},{"ruleId":"192","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":14,"column":12,"nodeType":"198","messageId":"199","endLine":14,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":46,"column":19,"nodeType":"198","messageId":"199","endLine":46,"endColumn":27},{"ruleId":"190","replacedBy":"201"},{"ruleId":"192","replacedBy":"202"},{"ruleId":"196","severity":1,"message":"203","line":12,"column":13,"nodeType":"198","messageId":"199","endLine":12,"endColumn":18},{"ruleId":"196","severity":1,"message":"197","line":17,"column":12,"nodeType":"198","messageId":"199","endLine":17,"endColumn":19},{"ruleId":"196","severity":1,"message":"203","line":18,"column":12,"nodeType":"198","messageId":"199","endLine":18,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":31,"column":8,"nodeType":"206","endLine":31,"endColumn":25,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":65,"column":8,"nodeType":"206","endLine":65,"endColumn":10,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":61,"column":17,"nodeType":"212","endLine":61,"endColumn":101},{"ruleId":"196","severity":1,"message":"197","line":14,"column":12,"nodeType":"198","messageId":"199","endLine":14,"endColumn":19},{"ruleId":"196","severity":1,"message":"213","line":14,"column":21,"nodeType":"198","messageId":"199","endLine":14,"endColumn":34},{"ruleId":"204","severity":1,"message":"214","line":31,"column":7,"nodeType":"206","endLine":31,"endColumn":9,"suggestions":"215"},{"ruleId":"196","severity":1,"message":"216","line":5,"column":30,"nodeType":"198","messageId":"199","endLine":5,"endColumn":49},{"ruleId":"196","severity":1,"message":"217","line":6,"column":27,"nodeType":"198","messageId":"199","endLine":6,"endColumn":43},{"ruleId":"196","severity":1,"message":"218","line":7,"column":26,"nodeType":"198","messageId":"199","endLine":7,"endColumn":41},{"ruleId":"190","replacedBy":"219"},{"ruleId":"192","replacedBy":"220"},{"ruleId":"190","replacedBy":"221"},{"ruleId":"192","replacedBy":"222"},{"ruleId":"204","severity":1,"message":"223","line":24,"column":7,"nodeType":"206","endLine":24,"endColumn":35,"suggestions":"224"},{"ruleId":"204","severity":1,"message":"225","line":36,"column":7,"nodeType":"206","endLine":36,"endColumn":17,"suggestions":"226"},{"ruleId":"204","severity":1,"message":"227","line":21,"column":7,"nodeType":"206","endLine":21,"endColumn":19,"suggestions":"228"},{"ruleId":"204","severity":1,"message":"229","line":26,"column":8,"nodeType":"206","endLine":26,"endColumn":25,"suggestions":"230"},{"ruleId":"196","severity":1,"message":"231","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"232","line":15,"column":12,"nodeType":"198","messageId":"199","endLine":15,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":26,"column":23,"nodeType":"198","messageId":"199","endLine":26,"endColumn":31},{"ruleId":"204","severity":1,"message":"233","line":25,"column":8,"nodeType":"206","endLine":25,"endColumn":21,"suggestions":"234"},{"ruleId":"204","severity":1,"message":"235","line":18,"column":7,"nodeType":"206","endLine":18,"endColumn":25,"suggestions":"236"},{"ruleId":"204","severity":1,"message":"237","line":24,"column":7,"nodeType":"206","endLine":24,"endColumn":24,"suggestions":"238"},{"ruleId":"204","severity":1,"message":"239","line":17,"column":7,"nodeType":"206","endLine":17,"endColumn":21,"suggestions":"240"},{"ruleId":"204","severity":1,"message":"241","line":25,"column":7,"nodeType":"206","endLine":25,"endColumn":24,"suggestions":"242"},{"ruleId":"196","severity":1,"message":"243","line":1,"column":26,"nodeType":"198","messageId":"199","endLine":1,"endColumn":35},{"ruleId":"196","severity":1,"message":"244","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":21},{"ruleId":"196","severity":1,"message":"245","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"246","line":11,"column":12,"nodeType":"198","messageId":"199","endLine":11,"endColumn":18},{"ruleId":"196","severity":1,"message":"247","line":11,"column":20,"nodeType":"198","messageId":"199","endLine":11,"endColumn":29},{"ruleId":"196","severity":1,"message":"248","line":12,"column":12,"nodeType":"198","messageId":"199","endLine":12,"endColumn":26},{"ruleId":"196","severity":1,"message":"249","line":12,"column":28,"nodeType":"198","messageId":"199","endLine":12,"endColumn":45},{"ruleId":"196","severity":1,"message":"250","line":15,"column":13,"nodeType":"198","messageId":"199","endLine":15,"endColumn":28},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],["251"],["252"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.",["251"],["252"],"'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'closeSigninForm' and 'history'. Either include them or remove the dependency array. If 'closeSigninForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["254"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'toggleLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.username'. Either include it or remove the dependency array.",["255"],"'setCurrentAudioTime' is assigned a value but never used.","'setDurationAudio' is assigned a value but never used.","'setProgressTime' is assigned a value but never used.",["251"],["252"],["251"],["252"],"React Hook useEffect has missing dependencies: 'playingSong' and 'stopPlaying'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has missing dependencies: 'audio', 'playingSong', and 'stopPlaying'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'selectedDemo'. Either include it or remove the dependency array. If 'selectedDemo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["259"],"'MP3Player' is defined but never used.","'comment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCurrentUserInfo' and 'username'. Either include them or remove the dependency array. If 'setCurrentUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"React Hook useEffect has missing dependencies: 'allDemos', 'displayList', and 'searchSelection'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'displayList', 'filteredBySelection', and 'searchUsername'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'allUsers'. Either include it or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'searchUsername', 'showUsernameList', and 'users'. Either include them or remove the dependency array.",["264"],"'useEffect' is defined but never used.","'AuthContext' is defined but never used.","'axios' is defined but never used.","'myInfo' is assigned a value but never used.","'setMyInfo' is assigned a value but never used.","'requestForInfo' is assigned a value but never used.","'setRequestForInfo' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [closeSigninForm, history, isAuthenticated]",{"range":"289","text":"290"},"Update the dependencies array to be: [authState]",{"range":"291","text":"292"},"Update the dependencies array to be: [user.username]",{"range":"293","text":"294"},"Update the dependencies array to be: [selectSong, index, demoURL, playingSong, stopPlaying]",{"range":"295","text":"296"},"Update the dependencies array to be: [audio, audioURL, playingSong, stopPlaying]",{"range":"297","text":"298"},"Update the dependencies array to be: [selectSong, selectedDemo]",{"range":"299","text":"300"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"301","text":"302"},"Update the dependencies array to be: [currentDemo, setCurrentUserInfo, username]",{"range":"303","text":"304"},"Update the dependencies array to be: [allDemos, displayList, queryBySelection, searchSelection]",{"range":"305","text":"306"},"Update the dependencies array to be: [displayList, filteredBySelection, queryByUsername, searchUsername]",{"range":"307","text":"308"},"Update the dependencies array to be: [allUsers, selectedUser]",{"range":"309","text":"310"},"Update the dependencies array to be: [queryByUsername, searchUsername, showUsernameList, users]",{"range":"311","text":"312"},[1144,1161],"[closeSigninForm, history, isAuthenticated]",[2332,2334],"[authState]",[1089,1091],"[user.username]",[621,649],"[selectSong, index, demoURL, playingSong, stopPlaying]",[922,932],"[audio, audioURL, playingSong, stopPlaying]",[659,671],"[selectSong, selectedDemo]",[899,916],"[history, isAuthenticated]",[882,895],"[currentDemo, setCurrentUserInfo, username]",[707,725],"[allDemos, displayList, queryBySelection, searchSelection]",[931,948],"[displayList, filteredBySelection, queryByUsername, searchUsername]",[672,686],"[allUsers, selectedUser]",[841,858],"[queryByUsername, searchUsername, showUsernameList, users]"]